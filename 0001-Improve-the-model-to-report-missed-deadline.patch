From 972b1bf3333ef098c4ac4e741f429ee721a2820b Mon Sep 17 00:00:00 2001
From: Felix Ingrand <felix@laas.fr>
Date: Fri, 22 Feb 2013 10:41:03 +0100
Subject: [PATCH] Improve the model to report missed deadline.

---
 server/bip-genom.cc    |  2 +-
 server/bip-genom.h     |  7 ++++++-
 server/bip/model.bip   | 33 +++++++++++++++++++++------------
 server/control-task.cc |  2 +-
 4 files changed, 29 insertions(+), 15 deletions(-)

diff --git a/server/bip-genom.cc b/server/bip-genom.cc
index c40b137..8435334 100644
--- a/server/bip-genom.cc
+++ b/server/bip-genom.cc
@@ -36,8 +36,8 @@ bip_state_report(char *service, char *si, char *se, char *BIPas)
 <'  if {![catch {$s task} t]} {'>
 volatile <"$comp"><"[$s name]">BIPState <"$comp">_<"[$s name]">_bip_allow =  <"[$s name]">undefinedBS;
 volatile <"$comp">_event <"$comp">_<"[$s name]">_report_to_bip;
-volatile bool <"$comp">_<"[$s name]">_active = false;
 <'}'>
+volatile bool <"$comp">_<"[$s name]">_active = false;
 
 <'  if {[llength [$s validate]]} {'>
 volatile <"$comp">_event <"$comp">_<"[$s name]">_report_validate_to_bip;
diff --git a/server/bip-genom.h b/server/bip-genom.h
index f099ce0..f68f05a 100644
--- a/server/bip-genom.h
+++ b/server/bip-genom.h
@@ -46,11 +46,16 @@ typedef enum {
 <'}'>
  } <"$comp"><"[$s name]">BIPState;
 
+<'  if {![catch {$s task} t]} {'>
 extern volatile <"$comp"><"[$s name]">BIPState <"$comp">_<"[$s name]">_bip_allow;
 extern volatile <"$comp">_event <"$comp">_<"[$s name]">_report_to_bip;
-extern volatile <"$comp">_event <"$comp">_<"[$s name]">_report_validate_to_bip;
+<'}'>
 extern volatile bool <"$comp">_<"[$s name]">_active;
 
+<'  if {[llength [$s validate]]} {'>
+extern volatile <"$comp">_event <"$comp">_<"[$s name]">_report_validate_to_bip;
+<'}'>
+
 <'}'>
 
 <'foreach task [$component task] {'>
diff --git a/server/bip/model.bip b/server/bip/model.bip
index 5ef2d48..8bc6f99 100644
--- a/server/bip/model.bip
+++ b/server/bip/model.bip
@@ -12,7 +12,7 @@
 #      notice and  this list of  conditions in the  documentation and/or
 #      other materials provided with the distribution.
 #
-#                                      Anthony Mallet on Mon Jan 16 2012
+#                            Ahlem Triki & Felix Ingrand on Decembre 2012
 #
 
 if {[llength $argv] != 1} { error "expected arguments: component" }
@@ -124,7 +124,6 @@ on go_to_start
    from Place_validate to Place_start
    provided (validated)
     do {#  
-        //Added by Ahlem 
         validated = false;
 	<"$comp">_<"[$s name]">_report_validate_to_bip = 99999;
 	s = <"[$s name]">startBS; 
@@ -147,7 +146,6 @@ on go_to_<"[$y name]">
 <'if {[$y name] == "ether"} {'>
    <"$comp">_<"[$s name]">_active = false;
 
-   //added by Ahlem 
    active = false; 
 <' } '>       
     bip_state_report((char *)"<"[$s name]">",(char *)"Finish_<"$e">",(char *)"Place_<"[$y name]">",(char *)"<"[$s name]"><"[$y name]">BS"); #}
@@ -163,7 +161,7 @@ on stay_in_ether
    from Place_ether to Place_ether
 provided (! active)
 do {#
-    while(!(<"$comp">_<"[$s name]">_active))
+    while(!(<"$comp">_<"[$s name]">_active));
     active = <"$comp">_<"[$s name]">_active;
   #}
 
@@ -380,6 +378,7 @@ export port Port not_active_<"[$s name]">
 
 port Port finish
 export port Port loopback 
+export port Port missed_deadline 
 
 place Start_permanent, Start
 
@@ -398,22 +397,21 @@ initial to Start_permanent
 <'if {[llength [$task fsm]]} {'>
 on start_<"[$task name]">_codel
   from Start_permanent to s2_<"[$task name]">
-  when x in [0,<"$ms_period">] delayable
+//  when x in [0,<"$ms_period">] delayable
 
 on finish_<"[$task name]">_codel
   from s2_<"[$task name]"> to Start
-  when x in [0,<"$ms_period">] delayable
+//  when x in [0,<"$ms_period">] delayable
 
-//added by Ahlem 
 on waiting_<"[$task name]">_codel
   from Start_permanent to Start
-  when x in [0,<"$ms_period">] delayable
+//  when x in [0,<"$ms_period">] delayable
 
     <'} else {'>
 
 on no_permanent_<"[$task name]">
   from Start_permanent to Start
-  when x in [0,<"$ms_period">] delayable
+//  when x in [0,<"$ms_period">] delayable
     <'}'>
 
 <'set last_place Start'>	// This is to store in last_place the last one (to connect the rest).
@@ -422,7 +420,7 @@ on no_permanent_<"[$task name]">
 <'foreach s [$task services] {'>
 on compute_active_<"[$s name]">
   from <"$last_place"> to s1_<"[$s name]">
-  when x in [0,<"$ms_period">] delayable
+//  when x in [0,<"$ms_period">] delayable
   do {#
       active = <"$comp">_<"[$s name]">_active;
       #}
@@ -430,14 +428,16 @@ on compute_active_<"[$s name]">
 on start_<"[$s name]">_codel
   from  s1_<"[$s name]"> to s2_<"[$s name]">
   provided (active)
+//  when x in [0,<"$ms_period">] delayable
 
 on finish_<"[$s name]">_codel
   from s2_<"[$s name]"> to s3_<"[$s name]">
+//  when x in [0,<"$ms_period">] delayable
 
 on not_active_<"[$s name]">
   from  s1_<"[$s name]"> to s3_<"[$s name]">
   provided (!active)
-  when x in [0,<"$ms_period">] delayable
+//  when x in [0,<"$ms_period">] delayable
 
 <'set last_place s3_[$s name]'>
 <'}'>
@@ -448,6 +448,14 @@ on loopback
   reset x                                         // transition to catch over "duration" or the the BIP Engine 
                                                   // will deadlock.
 
+on missed_deadline
+  from  <"$last_place"> to Start_permanent
+  when x in [<"$ms_period">+1,_] eager // This is the transition for missed deadline
+  reset x                                         
+  do {#                                           
+  fprintf(stderr,"************** Missed deadline <"$ms_period"> ms for task <"[$task name]">. **************");
+  #}
+
 end
 
 <'}'>
@@ -478,6 +486,7 @@ connector Singleton single_na_<"$comp"><"[$s name]">(exec_<"[$task name]">task.n
 
 
 connector Singleton single_<"[$task name]"> (exec_<"[$task name]">task.loopback)
+connector Singleton single_dl_<"[$task name]"> (exec_<"[$task name]">task.missed_deadline)
 
 <'}'>
 
@@ -491,7 +500,7 @@ component  <"[$task name]">Communicate_with_Codel  <"[$task name]">communicate_w
 connector Synchronize_<"$comp"><"[$task name]">BIPState SynchronizeLaunch<"$comp"><"[$task name]">(<"$comp"><"[$task name]">_component.launch_codel,  <"[$task name]">communicate_with_codel.launch_codel)
 connector Synchronize_<"$comp">_event_finish SynchronizeFinish<"$comp"><"[$task name]">(<"$comp"><"[$task name]">_component.finish_codel,  <"[$task name]">communicate_with_codel.finish_codel, exec_<"[$task name]">task.finish_<"[$task name]">_codel)
 connector Synchronize_start SynchronizeStart<"[$task name]">start_codel(exec_<"[$task name]">task.start_<"[$task name]">_codel,  <"[$task name]">communicate_with_codel.exec_<"[$task name]">_codel)
-//Added by Ahlem
+
 connector Synchronize_start SynchronizeStart<"[$task name]">waiting_codel(exec_<"[$task name]">task.waiting_<"[$task name]">_codel,  <"[$task name]">communicate_with_codel.waiting_<"[$task name]">_codel)
 <'} else {'>
 connector Singleton single_np_<"$comp"><"[$s name]">(exec_<"[$task name]">task.no_permanent_<"[$task name]">)
diff --git a/server/control-task.cc b/server/control-task.cc
index 4af0d36..76a5287 100644
--- a/server/control-task.cc
+++ b/server/control-task.cc
@@ -102,7 +102,7 @@ int
 
 <'if {![catch {$component clock-rate} rate]} {'>
   /* create timer */
-  cids.clock = cids.node->createTimer(ros::Duration(<"[$rate value]">),
+  cids.clock = cids.node->createTimer(ros::Duration(<"[$rate value]">/10),
                                       <"$comp">_timercb,
                                       false, true);
 <'}'>
-- 
1.9.1

